document.addEventListener(
  "DOMContentLoaded",
  function () {
    var e = document.querySelectorAll("[data-bss-dynamic-product]");
    for (var t of e) {
      var a = t.dataset.bssDynamicProductParam;
      t.dataset.reflowProduct = new URL(location.href).searchParams.get(a);
    }
  },
  !1
),
  (function () {
    "use strict";
    !(function () {
      if (
        "requestAnimationFrame" in window &&
        !/Mobile|Android/.test(navigator.userAgent)
      ) {
        var e = document.querySelectorAll("[data-bss-parallax]");
        if (e.length) {
          var t,
            a = [];
          window.addEventListener("scroll", n),
            window.addEventListener("resize", n),
            n();
        }
      }
      function n() {
        a.length = 0;
        for (var n = 0; n < e.length; n++) {
          var r = e[n].getBoundingClientRect(),
            o =
              parseFloat(e[n].getAttribute("data-bss-parallax-speed"), 10) ||
              0.5;
          r.bottom > 0 &&
            r.top < window.innerHeight &&
            a.push({ speed: o, node: e[n] });
        }
        cancelAnimationFrame(t), a.length && (t = requestAnimationFrame(i));
      }
      function i() {
        for (var e = 0; e < a.length; e++) {
          var t = a[e].node,
            n = a[e].speed;
          t.style.transform =
            "translate3d(0, " + -window.scrollY * n + "px, 0)";
        }
      }
    })();
  })();
var $playerWidth = "100%",
  vidList = [],
  time_update_interval = 0;
function onYouTubeIframeAPIReady() {
  player = new YT.Player("video-placeholder", {
    width: $playerWidth,
    videoId: vidList[0],
    playerVars: { color: "white", playlist: vidList.slice(1).join(",") },
    events: { onReady: initialize },
  });
}
function initialize() {
  updateTimerDisplay(),
    updateProgressBar(),
    clearInterval(time_update_interval),
    (time_update_interval = setInterval(function () {
      updateTimerDisplay(), updateProgressBar();
    }, 1e3)),
    $("#volume-input").val(Math.round(player.getVolume()));
}
function formatTime(e) {
  e = Math.round(e);
  var t = Math.floor(e / 60),
    a = e - 60 * t;
  return t + ":" + (a = 10 > a ? "0" + a : a);
}
function updateTimerDisplay() {
  $("#current-time").text(formatTime(player.getCurrentTime())),
    $("#duration").text(formatTime(player.getDuration()));
}
function updateProgressBar() {
  $("#progress-bar").val(
    (player.getCurrentTime() / player.getDuration()) * 100
  );
}
$("#dqv .vids img").each(function () {
  vidList.push($(this).data("video-id"));
});
var player;
($playerWidth = "100%"), (time_update_interval = 0);
$(function () {
  $("#progress-bar").on("mouseup touchend", function (e) {
    var t = player.getDuration() * (e.target.value / 100);
    player.seekTo(t);
  }),
    $("#play").on("click", function () {
      player.playVideo();
    }),
    $("#pause").on("click", function () {
      player.pauseVideo();
    }),
    $("#mute-toggle").on("click", function () {
      var e = $(this);
      player.isMuted()
        ? (player.unMute(), e.text("volume_up"))
        : (player.mute(), e.text("volume_off"));
    }),
    $("#volume-input").on("change", function () {
      player.setVolume($(this).val());
    }),
    $("#speed").on("change", function () {
      player.setPlaybackRate($(this).val());
    }),
    $("#quality").on("change", function () {
      player.setPlaybackQuality($(this).val());
    }),
    $("#next").on("click", function () {
      player.nextVideo();
    }),
    $("#prev").on("click", function () {
      player.previousVideo();
    }),
    $(".thumbnail").on("click", function () {
      var e = $(this).attr("data-video-id");
      player.cueVideoById(e);
    }),
    $("pre code").each(function (e, t) {
      hljs.highlightBlock(t);
    }),
    onYouTubeIframeAPIReady();
}),
  $("#menu-toggle").click(function (e) {
    e.preventDefault(), $("#wrapper").toggleClass("toggled");
  });
